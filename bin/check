#!/usr/bin/env ruby
# frozen_string_literal: true

# flush output immediately
$stdout.sync = true

require "find"
require "rubygems"
require "bundler/setup"
require File.expand_path("../../lib/check.rb", __FILE__)
require File.expand_path("../../lib/util.rb", __FILE__)

# For each element, if it's a file, add it to the array, otherwise
# drill down and add each file within to the array
data = ARGV.map do |arg|
  if File.file?(arg)
    arg
  else
    next unless Dir.exist?(arg)
    datas = []
    Find.find(arg) do |path|
      next if File.directory?(path)
      datas << path
    end
    datas
  end
end.flatten.compact

errors = [
  Check::Encoding.batch(data),
  Check::Entities.batch(data),
  Check::Date.batch(data),
].flatten

if errors.empty?
  puts "No errors found!"
  exit 0
end

$stderr.puts(errors.map do |e|
  <<~EOS
    * #{Util.bold(e.file)}
      #{e.problem}

  EOS
end.join(""))

exit 1
